   1               		.file	"HardwareSerial0.cpp"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 132               		.section	.text._ZN5Print17availableForWriteEv,"axG",@progbits,_ZN5Print17availableForWriteEv,comda
 135               		.weak	_ZN5Print17availableForWriteEv
 137               	_ZN5Print17availableForWriteEv:
 138               		.stabd	46,0,0
 140               	.Ltext1:
   1:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** /*
   2:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   Print.h - Base class that provides print() and println()
   3:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   Copyright (c) 2008 David A. Mellis.  All right reserved.
   4:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
   5:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   This library is free software; you can redistribute it and/or
   6:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   modify it under the terms of the GNU Lesser General Public
   7:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   License as published by the Free Software Foundation; either
   8:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   version 2.1 of the License, or (at your option) any later version.
   9:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  10:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   This library is distributed in the hope that it will be useful,
  11:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   Lesser General Public License for more details.
  14:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  15:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   You should have received a copy of the GNU Lesser General Public
  16:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   License along with this library; if not, write to the Free Software
  17:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  18:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** */
  19:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  20:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #ifndef Print_h
  21:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #define Print_h
  22:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  23:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #include <inttypes.h>
  24:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #include <stdio.h> // for size_t
  25:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  26:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #include "WString.h"
  27:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #include "Printable.h"
  28:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  29:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #define DEC 10
  30:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #define HEX 16
  31:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #define OCT 8
  32:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #ifdef BIN // Prevent warnings if BIN is previously defined in "iotnx4.h" or similar
  33:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #undef BIN
  34:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #endif
  35:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** #define BIN 2
  36:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  37:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** class Print
  38:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** {
  39:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   private:
  40:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     int write_error;
  41:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t printNumber(unsigned long, uint8_t);
  42:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t printFloat(double, uint8_t);
  43:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   protected:
  44:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     void setWriteError(int err = 1) { write_error = err; }
  45:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   public:
  46:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     Print() : write_error(0) {}
  47:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   
  48:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     int getWriteError() { return write_error; }
  49:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     void clearWriteError() { setWriteError(0); }
  50:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   
  51:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     virtual size_t write(uint8_t) = 0;
  52:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t write(const char *str) {
  53:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****       if (str == NULL) return 0;
  54:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****       return write((const uint8_t *)str, strlen(str));
  55:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     }
  56:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     virtual size_t write(const uint8_t *buffer, size_t size);
  57:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t write(const char *buffer, size_t size) {
  58:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****       return write((const uint8_t *)buffer, size);
  59:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     }
  60:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  61:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     // default to zero, meaning "a single write may block"
  62:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     // should be overriden by subclasses with buffering
  63:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     virtual int availableForWrite() { return 0; }
 142               	.LM0:
 143               	.LFBB1:
 144               	/* prologue: function */
 145               	/* frame size = 0 */
 146               	/* stack size = 0 */
 147               	.L__stack_usage = 0
 149               	.LM1:
 150 0000 80E0      		ldi r24,0
 151 0002 90E0      		ldi r25,0
 152 0004 0895      		ret
 154               	.Lscope1:
 156               		.stabd	78,0,0
 157               		.section	.text._ZN5Print5flushEv,"axG",@progbits,_ZN5Print5flushEv,comdat
 160               		.weak	_ZN5Print5flushEv
 162               	_ZN5Print5flushEv:
 163               		.stabd	46,0,0
  64:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  65:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(const __FlashStringHelper *);
  66:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(const String &);
  67:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(const char[]);
  68:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(char);
  69:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(unsigned char, int = DEC);
  70:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(int, int = DEC);
  71:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(unsigned int, int = DEC);
  72:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(long, int = DEC);
  73:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(unsigned long, int = DEC);
  74:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(double, int = 2);
  75:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t print(const Printable&);
  76:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  77:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(const __FlashStringHelper *);
  78:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(const String &s);
  79:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(const char[]);
  80:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(char);
  81:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(unsigned char, int = DEC);
  82:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(int, int = DEC);
  83:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(unsigned int, int = DEC);
  84:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(long, int = DEC);
  85:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(unsigned long, int = DEC);
  86:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(double, int = 2);
  87:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(const Printable&);
  88:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     size_t println(void);
  89:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h **** 
  90:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****     virtual void flush() { /* Empty implementation for backward compatibility */ }
 165               	.LM2:
 166               	.LFBB2:
 167               	/* prologue: function */
 168               	/* frame size = 0 */
 169               	/* stack size = 0 */
 170               	.L__stack_usage = 0
 171 0000 0895      		ret
 173               	.Lscope2:
 175               		.stabd	78,0,0
 176               		.text
 178               	.global	__vector_18
 180               	__vector_18:
 181               		.stabd	46,0,0
 183               	.Ltext2:
   1:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** /*
   2:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   HardwareSerial0.cpp - Hardware serial library for Wiring
   3:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   Copyright (c) 2006 Nicholas Zambetti.  All right reserved.
   4:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
   5:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   This library is free software; you can redistribute it and/or
   6:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   modify it under the terms of the GNU Lesser General Public
   7:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   License as published by the Free Software Foundation; either
   8:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   version 2.1 of the License, or (at your option) any later version.
   9:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  10:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   This library is distributed in the hope that it will be useful,
  11:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   Lesser General Public License for more details.
  14:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  15:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   You should have received a copy of the GNU Lesser General Public
  16:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   License along with this library; if not, write to the Free Software
  17:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  18:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  19:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   Modified 23 November 2006 by David A. Mellis
  20:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   Modified 28 September 2010 by Mark Sproul
  21:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   Modified 14 August 2012 by Alarus
  22:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   Modified 3 December 2013 by Matthijs Kooijman
  23:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** */
  24:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  25:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #include "Arduino.h"
  26:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #include "HardwareSerial.h"
  27:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #include "HardwareSerial_private.h"
  28:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  29:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** // Each HardwareSerial is defined in its own file, sine the linker pulls
  30:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** // in the entire file when any element inside is used. --gc-sections can
  31:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** // additionally cause unused symbols to be dropped, but ISRs have the
  32:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** // "used" attribute so are never dropped and they keep the
  33:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** // HardwareSerial instance in as well. Putting each instance in its own
  34:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** // file prevents the linker from pulling in any unused instances in the
  35:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** // first place.
  36:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  37:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #if defined(HAVE_HWSERIAL0)
  38:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  39:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #if defined(USART_RX_vect)
  40:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   ISR(USART_RX_vect)
  41:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #elif defined(USART0_RX_vect)
  42:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   ISR(USART0_RX_vect)
  43:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #elif defined(USART_RXC_vect)
  44:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   ISR(USART_RXC_vect) // ATmega8
  45:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #else
  46:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   #error "Don't know what the Data Received vector is called for Serial"
  47:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #endif
  48:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   {
 185               	.LM3:
 186               	.LFBB3:
 188               	.LM4:
 189 0000 1F92      		push r1
 190 0002 0F92      		push r0
 191 0004 0FB6      		in r0,__SREG__
 192 0006 0F92      		push r0
 193 0008 1124      		clr __zero_reg__
 194 000a 2F93      		push r18
 195 000c 8F93      		push r24
 196 000e 9F93      		push r25
 197 0010 EF93      		push r30
 198 0012 FF93      		push r31
 199               	/* prologue: Signal */
 200               	/* frame size = 0 */
 201               	/* stack size = 8 */
 202               	.L__stack_usage = 8
 203               	.LBB22:
 204               	.LBB23:
 206               	.Ltext3:
   1:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** /*
   2:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   HardwareSerial_private.h - Hardware serial library for Wiring
   3:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   Copyright (c) 2006 Nicholas Zambetti.  All right reserved.
   4:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
   5:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   This library is free software; you can redistribute it and/or
   6:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   modify it under the terms of the GNU Lesser General Public
   7:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   License as published by the Free Software Foundation; either
   8:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   version 2.1 of the License, or (at your option) any later version.
   9:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  10:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   This library is distributed in the hope that it will be useful,
  11:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   Lesser General Public License for more details.
  14:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  15:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   You should have received a copy of the GNU Lesser General Public
  16:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   License along with this library; if not, write to the Free Software
  17:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  18:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  19:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   Modified 23 November 2006 by David A. Mellis
  20:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   Modified 28 September 2010 by Mark Sproul
  21:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   Modified 14 August 2012 by Alarus
  22:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** */
  23:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  24:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #include "wiring_private.h"
  25:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  26:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // this next line disables the entire HardwareSerial.cpp, 
  27:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // this is so I can support Attiny series and any other chip without a uart
  28:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #if defined(HAVE_HWSERIAL0) || defined(HAVE_HWSERIAL1) || defined(HAVE_HWSERIAL2) || defined(HAVE_H
  29:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  30:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // Ensure that the various bit positions we use are available with a 0
  31:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // postfix, so we can always use the values for UART0 for all UARTs. The
  32:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // alternative, passing the various values for each UART to the
  33:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // HardwareSerial constructor also works, but makes the code bigger and
  34:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // slower.
  35:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #if !defined(TXC0)
  36:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #if defined(TXC)
  37:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // Some chips like ATmega8 don't have UPE, only PE. The other bits are
  38:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // named as expected.
  39:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #if !defined(UPE) && defined(PE)
  40:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define UPE PE
  41:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #endif
  42:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // On ATmega8, the uart and its bits are not numbered, so there is no TXC0 etc.
  43:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define TXC0 TXC
  44:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define RXEN0 RXEN
  45:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define TXEN0 TXEN
  46:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define RXCIE0 RXCIE
  47:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define UDRIE0 UDRIE
  48:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define U2X0 U2X
  49:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define UPE0 UPE
  50:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define UDRE0 UDRE
  51:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #elif defined(TXC1)
  52:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // Some devices have uart1 but no uart0
  53:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define TXC0 TXC1
  54:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define RXEN0 RXEN1
  55:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define TXEN0 TXEN1
  56:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define RXCIE0 RXCIE1
  57:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define UDRIE0 UDRIE1
  58:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define U2X0 U2X1
  59:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define UPE0 UPE1
  60:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #define UDRE0 UDRE1
  61:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #else
  62:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #error No UART found in HardwareSerial.cpp
  63:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #endif
  64:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #endif // !defined TXC0
  65:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  66:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // Check at compiletime that it is really ok to use the bit positions of
  67:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // UART0 for the other UARTs as well, in case these values ever get
  68:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // changed for future hardware.
  69:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #if defined(TXC1) && (TXC1 != TXC0 || RXEN1 != RXEN0 || RXCIE1 != RXCIE0 || \
  70:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 		      UDRIE1 != UDRIE0 || U2X1 != U2X0 || UPE1 != UPE0 || \
  71:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 		      UDRE1 != UDRE0)
  72:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #error "Not all bit positions for UART1 are the same as for UART0"
  73:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #endif
  74:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #if defined(TXC2) && (TXC2 != TXC0 || RXEN2 != RXEN0 || RXCIE2 != RXCIE0 || \
  75:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 		      UDRIE2 != UDRIE0 || U2X2 != U2X0 || UPE2 != UPE0 || \
  76:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 		      UDRE2 != UDRE0)
  77:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #error "Not all bit positions for UART2 are the same as for UART0"
  78:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #endif
  79:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #if defined(TXC3) && (TXC3 != TXC0 || RXEN3 != RXEN0 || RXCIE3 != RXCIE0 || \
  80:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 		      UDRIE3 != UDRIE0 || U3X3 != U3X0 || UPE3 != UPE0 || \
  81:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 		      UDRE3 != UDRE0)
  82:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #error "Not all bit positions for UART3 are the same as for UART0"
  83:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** #endif
  84:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  85:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // Constructors ////////////////////////////////////////////////////////////////
  86:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  87:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** HardwareSerial::HardwareSerial(
  88:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   volatile uint8_t *ubrrh, volatile uint8_t *ubrrl,
  89:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   volatile uint8_t *ucsra, volatile uint8_t *ucsrb,
  90:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   volatile uint8_t *ucsrc, volatile uint8_t *udr) :
  91:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     _ubrrh(ubrrh), _ubrrl(ubrrl),
  92:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     _ucsra(ucsra), _ucsrb(ucsrb), _ucsrc(ucsrc),
  93:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     _udr(udr),
  94:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     _rx_buffer_head(0), _rx_buffer_tail(0),
  95:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     _tx_buffer_head(0), _tx_buffer_tail(0)
  96:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** {
  97:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** }
  98:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
  99:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** // Actual interrupt handlers //////////////////////////////////////////////////////////////
 100:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
 101:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** void HardwareSerial::_rx_complete_irq(void)
 102:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** {
 103:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   if (bit_is_clear(*_ucsra, UPE0)) {
 208               	.LM5:
 209 0014 E091 0000 		lds r30,Serial+16
 210 0018 F091 0000 		lds r31,Serial+16+1
 211 001c 8081      		ld r24,Z
 212 001e E091 0000 		lds r30,Serial+22
 213 0022 F091 0000 		lds r31,Serial+22+1
 214 0026 82FD      		sbrc r24,2
 215 0028 00C0      		rjmp .L4
 216               	.LBE23:
 217               	.LBB24:
 218               	.LBB25:
 104:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     // No Parity error, read byte and store it in the buffer if there is
 105:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     // room
 106:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     unsigned char c = *_udr;
 220               	.LM6:
 221 002a 9081      		ld r25,Z
 107:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     rx_buffer_index_t i = (unsigned int)(_rx_buffer_head + 1) % SERIAL_RX_BUFFER_SIZE;
 223               	.LM7:
 224 002c 8091 0000 		lds r24,Serial+25
 225 0030 8F5F      		subi r24,lo8(-(1))
 226 0032 8F73      		andi r24,lo8(63)
 108:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** 
 109:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     // if we should be storing the received character into the location
 110:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     // just before the tail (meaning that the head would advance to the
 111:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     // current location of the tail), we're about to overflow the buffer
 112:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     // and so we don't write the character or advance the head.
 113:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     if (i != _rx_buffer_tail) {
 228               	.LM8:
 229 0034 2091 0000 		lds r18,Serial+26
 230 0038 8217      		cp r24,r18
 231 003a 01F0      		breq .L3
 114:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****       _rx_buffer[_rx_buffer_head] = c;
 233               	.LM9:
 234 003c E091 0000 		lds r30,Serial+25
 235 0040 F0E0      		ldi r31,0
 236 0042 E050      		subi r30,lo8(-(Serial))
 237 0044 F040      		sbci r31,hi8(-(Serial))
 238 0046 958F      		std Z+29,r25
 115:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****       _rx_buffer_head = i;
 240               	.LM10:
 241 0048 8093 0000 		sts Serial+25,r24
 242 004c 00C0      		rjmp .L3
 243               	.L4:
 244               	.LBE25:
 245               	.LBE24:
 246               	.LBB26:
 116:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     }
 117:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****   } else {
 118:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     // Parity error, read byte but discard it
 119:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h ****     *_udr;
 248               	.LM11:
 249 004e 8081      		ld r24,Z
 250               	.L3:
 251               	/* epilogue start */
 252               	.LBE26:
 253               	.LBE22:
 255               	.Ltext4:
  49:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****     Serial._rx_complete_irq();
  50:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   }
 257               	.LM12:
 258 0050 FF91      		pop r31
 259 0052 EF91      		pop r30
 260 0054 9F91      		pop r25
 261 0056 8F91      		pop r24
 262 0058 2F91      		pop r18
 263 005a 0F90      		pop r0
 264 005c 0FBE      		out __SREG__,r0
 265 005e 0F90      		pop r0
 266 0060 1F90      		pop r1
 267 0062 1895      		reti
 273               	.Lscope3:
 275               		.stabd	78,0,0
 277               	.global	__vector_19
 279               	__vector_19:
 280               		.stabd	46,0,0
  51:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  52:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #if defined(UART0_UDRE_vect)
  53:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** ISR(UART0_UDRE_vect)
  54:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #elif defined(UART_UDRE_vect)
  55:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** ISR(UART_UDRE_vect)
  56:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #elif defined(USART0_UDRE_vect)
  57:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** ISR(USART0_UDRE_vect)
  58:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #elif defined(USART_UDRE_vect)
  59:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** ISR(USART_UDRE_vect)
  60:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #else
  61:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   #error "Don't know what the Data Register Empty vector is called for Serial"
  62:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #endif
  63:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** {
 282               	.LM13:
 283               	.LFBB4:
 284 0064 1F92      		push r1
 285 0066 0F92      		push r0
 286 0068 0FB6      		in r0,__SREG__
 287 006a 0F92      		push r0
 288 006c 1124      		clr __zero_reg__
 289 006e 2F93      		push r18
 290 0070 3F93      		push r19
 291 0072 4F93      		push r20
 292 0074 5F93      		push r21
 293 0076 6F93      		push r22
 294 0078 7F93      		push r23
 295 007a 8F93      		push r24
 296 007c 9F93      		push r25
 297 007e AF93      		push r26
 298 0080 BF93      		push r27
 299 0082 EF93      		push r30
 300 0084 FF93      		push r31
 301               	/* prologue: Signal */
 302               	/* frame size = 0 */
 303               	/* stack size = 15 */
 304               	.L__stack_usage = 15
  64:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   Serial._tx_udr_empty_irq();
 306               	.LM14:
 307 0086 80E0      		ldi r24,lo8(Serial)
 308 0088 90E0      		ldi r25,hi8(Serial)
 309 008a 0E94 0000 		call _ZN14HardwareSerial17_tx_udr_empty_irqEv
 310               	/* epilogue start */
  65:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** }
 312               	.LM15:
 313 008e FF91      		pop r31
 314 0090 EF91      		pop r30
 315 0092 BF91      		pop r27
 316 0094 AF91      		pop r26
 317 0096 9F91      		pop r25
 318 0098 8F91      		pop r24
 319 009a 7F91      		pop r23
 320 009c 6F91      		pop r22
 321 009e 5F91      		pop r21
 322 00a0 4F91      		pop r20
 323 00a2 3F91      		pop r19
 324 00a4 2F91      		pop r18
 325 00a6 0F90      		pop r0
 326 00a8 0FBE      		out __SREG__,r0
 327 00aa 0F90      		pop r0
 328 00ac 1F90      		pop r1
 329 00ae 1895      		reti
 331               	.Lscope4:
 333               		.stabd	78,0,0
 335               	.global	_Z17Serial0_availablev
 337               	_Z17Serial0_availablev:
 338               		.stabd	46,0,0
  66:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  67:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #if defined(UBRRH) && defined(UBRRL)
  68:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   HardwareSerial Serial(&UBRRH, &UBRRL, &UCSRA, &UCSRB, &UCSRC, &UDR);
  69:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #else
  70:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   HardwareSerial Serial(&UBRR0H, &UBRR0L, &UCSR0A, &UCSR0B, &UCSR0C, &UDR0);
  71:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** #endif
  72:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** 
  73:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** // Function that can be weakly referenced by serialEventRun to prevent
  74:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** // pulling in this file if it's not otherwise used.
  75:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** bool Serial0_available() {
 340               	.LM16:
 341               	.LFBB5:
 342               	/* prologue: function */
 343               	/* frame size = 0 */
 344               	/* stack size = 0 */
 345               	.L__stack_usage = 0
  76:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp ****   return Serial.available();
 347               	.LM17:
 348 00b0 80E0      		ldi r24,lo8(Serial)
 349 00b2 90E0      		ldi r25,hi8(Serial)
 350 00b4 0E94 0000 		call _ZN14HardwareSerial9availableEv
 351 00b8 21E0      		ldi r18,lo8(1)
 352 00ba 892B      		or r24,r25
 353 00bc 01F4      		brne .L9
 354 00be 20E0      		ldi r18,0
 355               	.L9:
  77:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial0.cpp **** }
 357               	.LM18:
 358 00c0 822F      		mov r24,r18
 359 00c2 0895      		ret
 361               	.Lscope5:
 363               		.stabd	78,0,0
 364               		.section	.text.startup,"ax",@progbits
 367               	_GLOBAL__sub_I___vector_18:
 368               		.stabd	46,0,0
 370               	.LM19:
 371               	.LFBB6:
 372               	/* prologue: function */
 373               	/* frame size = 0 */
 374               	/* stack size = 0 */
 375               	.L__stack_usage = 0
 376               	.LBB36:
 377               	.LBB37:
 378               	.LBB38:
 379               	.LBB39:
 380               	.LBB40:
 381               	.LBB41:
 382               	.LBB42:
 384               	.Ltext5:
  46:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Print.h ****   
 386               	.LM20:
 387 0000 E0E0      		ldi r30,lo8(Serial)
 388 0002 F0E0      		ldi r31,hi8(Serial)
 389 0004 1382      		std Z+3,__zero_reg__
 390 0006 1282      		std Z+2,__zero_reg__
 391               	.LBE42:
 392               	.LBE41:
 394               	.Ltext6:
   1:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** /*
   2:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   Stream.h - base class for character-based streams.
   3:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   Copyright (c) 2010 David A. Mellis.  All right reserved.
   4:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
   5:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   This library is free software; you can redistribute it and/or
   6:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   modify it under the terms of the GNU Lesser General Public
   7:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   License as published by the Free Software Foundation; either
   8:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   version 2.1 of the License, or (at your option) any later version.
   9:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  10:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   This library is distributed in the hope that it will be useful,
  11:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   Lesser General Public License for more details.
  14:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  15:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   You should have received a copy of the GNU Lesser General Public
  16:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   License along with this library; if not, write to the Free Software
  17:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
  18:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  19:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   parsing functions based on TextFinder library by Michael Margolis
  20:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** */
  21:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  22:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #ifndef Stream_h
  23:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #define Stream_h
  24:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  25:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #include <inttypes.h>
  26:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #include "Print.h"
  27:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  28:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** // compatability macros for testing
  29:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** /*
  30:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #define   getInt()            parseInt()
  31:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #define   getInt(ignore)    parseInt(ignore)
  32:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #define   getFloat()          parseFloat()
  33:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #define   getFloat(ignore)  parseFloat(ignore)
  34:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #define   getString( pre_string, post_string, buffer, length)
  35:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** readBytesBetween( pre_string, terminator, buffer, length)
  36:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** */
  37:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  38:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** // This enumeration provides the lookahead options for parseInt(), parseFloat()
  39:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** // The rules set out here are used until either the first valid character is found
  40:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** // or a time out occurs due to lack of input.
  41:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** enum LookaheadMode{
  42:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     SKIP_ALL,       // All invalid characters are ignored.
  43:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     SKIP_NONE,      // Nothing is skipped, and the stream is not touched unless the first waiting c
  44:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     SKIP_WHITESPACE // Only tabs, spaces, line feeds & carriage returns are skipped.
  45:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** };
  46:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  47:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** #define NO_IGNORE_CHAR  '\x01' // a char not found in a valid ASCII numeric field
  48:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  49:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** class Stream : public Print
  50:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** {
  51:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   protected:
  52:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     unsigned long _timeout;      // number of milliseconds to wait for the next char before abortin
  53:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     unsigned long _startMillis;  // used for timeout measurement
  54:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     int timedRead();    // read stream with timeout
  55:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     int timedPeek();    // peek stream with timeout
  56:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     int peekNextDigit(LookaheadMode lookahead, bool detectDecimal); // returns the next numeric dig
  57:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  58:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****   public:
  59:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     virtual int available() = 0;
  60:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     virtual int read() = 0;
  61:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     virtual int peek() = 0;
  62:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h **** 
  63:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/Stream.h ****     Stream() {_timeout=1000;}
 396               	.LM21:
 397 0008 88EE      		ldi r24,lo8(-24)
 398 000a 93E0      		ldi r25,lo8(3)
 399 000c A0E0      		ldi r26,0
 400 000e B0E0      		ldi r27,0
 401 0010 8483      		std Z+4,r24
 402 0012 9583      		std Z+5,r25
 403 0014 A683      		std Z+6,r26
 404 0016 B783      		std Z+7,r27
 405               	.LBE40:
 406               	.LBE39:
 408               	.Ltext7:
  95:/home/mrh/Downloads/arduino-1.8.8-linux64/arduino-1.8.8//hardware/arduino/avr/cores/arduino/HardwareSerial_private.h **** {
 410               	.LM22:
 411 0018 80E0      		ldi r24,lo8(_ZTV14HardwareSerial+4)
 412 001a 90E0      		ldi r25,hi8(_ZTV14HardwareSerial+4)
 413 001c 9183      		std Z+1,r25
 414 001e 8083      		st Z,r24
 415 0020 85EC      		ldi r24,lo8(-59)
 416 0022 90E0      		ldi r25,0
 417 0024 9587      		std Z+13,r25
 418 0026 8487      		std Z+12,r24
 419 0028 84EC      		ldi r24,lo8(-60)
 420 002a 90E0      		ldi r25,0
 421 002c 9787      		std Z+15,r25
 422 002e 8687      		std Z+14,r24
 423 0030 80EC      		ldi r24,lo8(-64)
 424 0032 90E0      		ldi r25,0
 425 0034 918B      		std Z+17,r25
 426 0036 808B      		std Z+16,r24
 427 0038 81EC      		ldi r24,lo8(-63)
 428 003a 90E0      		ldi r25,0
 429 003c 938B      		std Z+19,r25
 430 003e 828B      		std Z+18,r24
 431 0040 82EC      		ldi r24,lo8(-62)
 432 0042 90E0      		ldi r25,0
 433 0044 958B      		std Z+21,r25
 434 0046 848B      		std Z+20,r24
 435 0048 86EC      		ldi r24,lo8(-58)
 436 004a 90E0      		ldi r25,0
 437 004c 978B      		std Z+23,r25
 438 004e 868B      		std Z+22,r24
 439 0050 118E      		std Z+25,__zero_reg__
 440 0052 128E      		std Z+26,__zero_reg__
 441 0054 138E      		std Z+27,__zero_reg__
 442 0056 148E      		std Z+28,__zero_reg__
 443 0058 0895      		ret
 444               	.LBE38:
 445               	.LBE37:
 446               	.LBE36:
 448               	.Lscope6:
 450               		.stabd	78,0,0
 451               		.global __do_global_ctors
 452               		.section .ctors,"a",@progbits
 453               		.p2align	1
 454 0000 0000      		.word	gs(_GLOBAL__sub_I___vector_18)
 455               	.global	Serial
 456               		.section .bss
 459               	Serial:
 460 0000 0000 0000 		.zero	157
 460      0000 0000 
 460      0000 0000 
 460      0000 0000 
 460      0000 0000 
 476               		.text
 478               	.Letext0:
 479               		.ident	"GCC: (GNU) 5.4.0"
 480               	.global __do_clear_bss
DEFINED SYMBOLS
                            *ABS*:0000000000000000 HardwareSerial0.cpp
     /tmp/ccH77AAm.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccH77AAm.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccH77AAm.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccH77AAm.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccH77AAm.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccH77AAm.s:137    .text._ZN5Print17availableForWriteEv:0000000000000000 _ZN5Print17availableForWriteEv
     /tmp/ccH77AAm.s:162    .text._ZN5Print5flushEv:0000000000000000 _ZN5Print5flushEv
     /tmp/ccH77AAm.s:180    .text:0000000000000000 __vector_18
     /tmp/ccH77AAm.s:459    .bss:0000000000000000 Serial
     /tmp/ccH77AAm.s:279    .text:0000000000000064 __vector_19
     /tmp/ccH77AAm.s:337    .text:00000000000000b0 _Z17Serial0_availablev
     /tmp/ccH77AAm.s:367    .text.startup:0000000000000000 _GLOBAL__sub_I___vector_18

UNDEFINED SYMBOLS
_ZN14HardwareSerial17_tx_udr_empty_irqEv
_ZN14HardwareSerial9availableEv
_ZTV14HardwareSerial
__do_global_ctors
__do_clear_bss
